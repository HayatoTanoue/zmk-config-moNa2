#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W      &kp E         &kp R             &kp T                                              &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A           &kp S      &kp D         &kp F             &kp G        &trans              &kp MINUS         &kp H        &kp J  &lt 3 K    &lt 5 L  &kp SQT
&kp LEFT_GUI    &kp Z      &kp X         &kp C             &kp V        &kp B               &kp SINGLE_QUOTE  &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &lt 1 LANGUAGE_1  &lt 2 SPACE  &lt 3 LANGUAGE_2    &kp BACKSPACE     &lt 1 ENTER                             &lt 5 RIGHT_SHIFT
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_1 {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                    &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8      &kp NUMBER_9       &kp NUMBER_0
&kp TAB       &trans        &trans        &trans        &trans        &trans    &trans  &kp EQUAL     &trans        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMICOLON
&trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans        &trans        &kp LESS_THAN     &kp GREATER_THAN   &kp SLASH
&trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans                                                           &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_2 {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                               &kp CARET         &kp AMPERSAND      &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans           &trans       &trans    &trans      &trans       &trans    &kp UNDERSCORE     &kp PLUS          &kp AT_SIGN        &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp COLON
&trans           &trans       &trans    &trans      &trans       &trans    &kp DOUBLE_QUOTES  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans          &trans                &kp QUESTION
&trans           &trans       &trans    &trans      &trans       &trans    &trans             &trans                                                                     &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_3 {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp LC(UP_ARROW)    &kp LC(TAB)              &trans                     &trans  &trans              &trans            &trans               &trans
&kp HOME        &kp LC(LEFT_ARROW)      &kp LC(DOWN_ARROW)  &kp LC(RIGHT_ARROW)      &kp END  &trans    &trans  &trans  &mkp LCLK           &trans            &mkp RCLK            &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans              &kp LG(LS(RIGHT_ARROW))  &trans   &trans    &trans  &trans  &kp RC(LEFT_ARROW)  &kp RC(UP_ARROW)  &kp RC(RIGHT_ARROW)  &trans
&trans          &trans                  &trans              &trans                   &trans   &trans    &trans  &trans                                                             &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_5 {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &kp LG(LS(NUMBER_4))  &kp LS(LG(N5))  &trans           &trans
&trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans                &kp UP_ARROW    &trans           &trans
&trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &kp LEFT_ARROW        &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans                                                         &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
